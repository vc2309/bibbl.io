AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
<<<<<<< HEAD
Description: >
  bibbl.io

  Sample SAM Template for bibbl.io

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
=======
Description: 'bibbl.io

  Sample SAM Template for bibbl.io

  '
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
Globals:
  Function:
    Timeout: 900
    Environment:
      Variables:
        TABLE_NAME: raw-notes
<<<<<<< HEAD

Resources:
  NoteFileFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
=======
Resources:
  NoteFileFunction:
    Type: AWS::Serverless::Function
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
    Properties:
      CodeUri: lambda_folder/
      Handler: app.note_file_handler
      Runtime: python3.8
      Events:
<<<<<<< HEAD
        NoteFileFunctionApi: # change this to s3 event
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
=======
        NoteFileFunctionApi:
          Type: Api
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
          Properties:
            Path: /rawnotes
            Method: get
        FileUploadEvent:
          Type: S3
          Properties:
            Bucket:
              Ref: NoteFileBucket
            Events:
<<<<<<< HEAD
              - 's3:ObjectCreated:*'
=======
            - s3:ObjectCreated:*
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
      Policies:
      - AmazonDynamoDBFullAccess
      - AmazonS3FullAccess
  RawNoteTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: raw-notes
      AttributeDefinitions:
<<<<<<< HEAD
        - AttributeName: note_id
          AttributeType: S
        - AttributeName: s3_upload_object
          AttributeType: S
      KeySchema:
        - AttributeName: note_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "s3_upload_object"
          KeySchema:
            - AttributeName: "s3_upload_object"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
=======
      - AttributeName: note_id
        AttributeType: S
      - AttributeName: s3_upload_object
        AttributeType: S
      KeySchema:
      - AttributeName: note_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: s3_upload_object
        KeySchema:
        - AttributeName: s3_upload_object
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  NoteFileBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
<<<<<<< HEAD
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"
=======
          - '*'
          AllowedMethods:
          - GET
          - PUT
          - HEAD
          AllowedOrigins:
          - '*'
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
  SmartNoteTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: smart-notes
      AttributeDefinitions:
<<<<<<< HEAD
        - AttributeName: smart_note_id
          AttributeType: S
        - AttributeName: s3_upload_object
          AttributeType: S
      KeySchema:
        - AttributeName: smart_note_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "s3_upload_object"
          KeySchema:
            - AttributeName: "s3_upload_object"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
=======
      - AttributeName: smart_note_id
        AttributeType: S
      - AttributeName: s3_upload_object
        AttributeType: S
      KeySchema:
      - AttributeName: smart_note_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: s3_upload_object
        KeySchema:
        - AttributeName: s3_upload_object
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  SnapShotTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: snap-shots
      AttributeDefinitions:
<<<<<<< HEAD
        - AttributeName: snap_shot_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: delivery_date
          AttributeType: S
      KeySchema:
        - AttributeName: snap_shot_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: "user_id"
          KeySchema:
            - AttributeName: "user_id"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        - IndexName: "delivery_date"
          KeySchema:
            - AttributeName: "delivery_date"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
=======
      - AttributeName: snap_shot_id
        AttributeType: S
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: delivery_date
        AttributeType: S
      KeySchema:
      - AttributeName: snap_shot_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: user_id
        KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
      - IndexName: delivery_date
        KeySchema:
        - AttributeName: delivery_date
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  TestFunction:
<<<<<<< HEAD
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambda_folder/
      Handler: app.test_handler
      Runtime: python3.8
      Events:
        TestApi: # change this to s3 event
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
=======
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-15ao8arzo1tzz/bibbl/00cf9ec66122de92bad89a85ce1af33e
      Handler: app.test_handler
      Runtime: python3.8
      Events:
        TestApi:
          Type: Api
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
          Properties:
            Path: /testing
            Method: get
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: user-table
      AttributeDefinitions:
<<<<<<< HEAD
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  TestApi:
    Description: "API Gateway endpoint URL for Prod stage for Test function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/testing/"
  NoteFileFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt NoteFileFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
  NotesTableDB:
    Value: !Ref RawNoteTable
    Description: Table name of the newly created DynamoDB table
  # SmartNoteTableDB:
  #   Value: !Ref SmartNoteTable
  #   Description: Table name of the newly created DynamoDB table
  # SnapshotTableDB:
  #   Value: !Ref SnapshotTable
  #   Description: Table name of the newly created DynamoDB table
=======
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  SnapDeliveryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-15ao8arzo1tzz/bibbl/00cf9ec66122de92bad89a85ce1af33e
      Handler: app.snap_delivery_handler
      Runtime: python3.8
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: cron(0 8 * * ? *)
      Policies:
      - AmazonDynamoDBFullAccess
      - AmazonS3FullAccess
Outputs:
  TestApi:
    Description: API Gateway endpoint URL for Prod stage for Test function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/testing/
  NoteFileFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - NoteFileFunction
      - Arn
  NotesTableDB:
    Value:
      Ref: RawNoteTable
    Description: Table name of the newly created DynamoDB table
>>>>>>> 42818d3e19211487f169d715a61c98fbd1788d87
